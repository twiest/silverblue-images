FROM ghcr.io/twiest/silverblue-shared-downloader-kernel-cache:latest as rpms


FROM quay.io/fedora/fedora-silverblue:42


# Fix selinux so that it allows zfs to mount snapshots
ADD files/selinux/twiest-zfs.pp /usr/share/selinux/packages/
ADD files/selinux/twiest-zfs.pp.bz2 /usr/share/selinux/packages/
ADD files/selinux/twiest-zfs-selinux.service /etc/systemd/system/
RUN systemctl enable twiest-zfs-selinux

# Save old kernel version
RUN export KERNEL_VERSION="$(rpm -qa kernel --queryformat '%{VERSION}-%{RELEASE}.%{ARCH}')" && \
    cp -v "/lib/modules/${KERNEL_VERSION}/initramfs.img" "/lib/modules/initramfs.stock.img"

# Remove current kernel (nice way, then ugly way)
RUN rpm -evh kernel-modules-core kernel-core kernel-modules kernel kernel-modules-extra virtualbox-guest-additions

# Install coreos kernel and zfs-release
COPY --from=rpms /rpms /rpms
RUN ls -lah --color /rpms/
RUN mkdir -p /var/roothome && \
    dnf install -y /rpms/kernel*.rpm /rpms/zfs-release-*.rpm && \
    dnf clean all

# TODO: Remove the following line once these bugs are fixed:
# - https://github.com/coreos/rpm-ostree/issues/4201
# - https://github.com/coreos/rpm-ostree/issues/1614
RUN test -f /usr/bin/ld || ln -s /usr/bin/ld.bfd /usr/bin/ld

# Install zfs and tell dkms to install the module
RUN dnf install -y zfs zfs-dracut && \
    dkms autoinstall -k $(rpm -qa kernel --queryformat '%{VERSION}-%{RELEASE}.%{ARCH}') && \
    dnf clean all

# Add samsung usb udev rules so that dracut picks them up (makes trim work)
COPY files/dracut/10samsung-usb-udev /usr/lib/dracut/modules.d/10samsung-usb-udev/

# Add silicon power udev rules so that dracut picks them up (makes trim work)
COPY files/dracut/20silicon-power-udev /usr/lib/dracut/modules.d/20silicon-power-udev/

# Add samsung usb udev rules for post boot trim to work
ADD  files/dracut/10samsung-usb-udev/10-samsung-usb.rules /etc/udev/rules.d/10-samsung-usb.rules

# Add silicon power udev rules for post boot trim to work
ADD  files/dracut/20silicon-power-udev/20-silicon-power.rules /etc/udev/rules.d/20-silicon-power.rules

# Install dracut requirements
RUN dnf install -y lsscsi busybox rng-tools biosdevname device-mapper-multipath && \
    dnf clean all

# Setup zfs for inclusion in dracut
RUN echo 'add_dracutmodules+=" zfs "' > /etc/dracut.conf.d/zfs.conf && \
    echo 'force_drivers+=" zfs "' >> /etc/dracut.conf.d/zfs.conf

# Add topdirs so that we customize /sysroot on boot with custom directories
ADD files/dracut/98topdirs/mk-topdirs.sh   /usr/lib/topdirs/mk-topdirs.sh
ADD files/dracut/98topdirs/module-setup.sh /usr/lib/dracut/modules.d/98topdirs/module-setup.sh
ADD files/dracut/98topdirs/topdirs.service /usr/lib/systemd/system/topdirs.service

# Run dracut to build a new initrd
RUN export KERNEL_VERSION="$(rpm -qa kernel --queryformat '%{VERSION}-%{RELEASE}.%{ARCH}')" && \
    stock_arguments=$(lsinitrd /lib/modules/initramfs.stock.img  | grep '^Arguments: ' | sed 's/^Arguments: //' | sed -e "s/--kver.*'.*'/--kver '${KERNEL_VERSION}'/") && \
    echo "stock arguments for initrd: ${stock_arguments}" && \
    mkdir -p /var/tmp /tmp/dracut /var/roothome && \
    eval "dracut $stock_arguments"

# Move the new initrd into place while keeping the stock initrd in the image for reference.
RUN export KERNEL_VERSION="$(rpm -qa kernel --queryformat '%{VERSION}-%{RELEASE}.%{ARCH}')" && \
    mv -v /boot/initramfs*.img "/lib/modules/${KERNEL_VERSION}/initramfs.img"

# Show that the initrd includes the samsung udev rules service:
RUN export KERNEL_VERSION="$(rpm -qa kernel --queryformat '%{VERSION}-%{RELEASE}.%{ARCH}')" && \
    lsinitrd "/lib/modules/${KERNEL_VERSION}/initramfs.img" | grep 10-samsung-usb.rules

# TODO: Remove the following line once these bugs are fixed:
# - https://github.com/coreos/rpm-ostree/issues/4201
# - https://github.com/coreos/rpm-ostree/issues/1614
RUN test -h /usr/bin/ld && rm -v /usr/bin/ld

# Install sanoid from rpm
ADD files/sanoid/sanoid-2.2.0-1.fc42.noarch.rpm /root
RUN dnf install -y /root/sanoid-*.rpm && \
    dnf clean all

# Uninstall ZFS repository (speeds up dnf metadata operations)
RUN rpm -evh zfs-release-2-8$(rpm --eval "%{dist}")

# Cleanup image for linting
RUN dnf remove -y rng-tools && \
    sed -i '/rtlsdr/d' /etc/group && \
    rm -rf /var && mkdir /var && \
    rm -rf /boot && mkdir /boot

# Verify image is good
RUN bootc container lint --fatal-warnings --skip baseimage-composefs
